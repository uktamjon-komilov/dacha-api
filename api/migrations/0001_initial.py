# Generated by Django 3.2.7 on 2021-10-05 06:07

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=25, unique=True, verbose_name='Telefon raqam')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ismi')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Familiyasi')),
                ('photo', models.FileField(blank=True, null=True, upload_to='user/')),
                ('balance', models.FloatField(default=0.0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Estate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estate_type', models.CharField(choices=[('dacha', 'Dacha'), ('mahmonxona', 'Mehmonxona'), ('sanatoriya', 'Sanatoriya')], max_length=50, verbose_name='Mulk turi')),
                ('photo', models.FileField(upload_to='images/', verbose_name='Asosiy rasm')),
                ('beds', models.IntegerField()),
                ('pool', models.IntegerField()),
                ('people', models.IntegerField()),
                ('description', models.TextField(verbose_name='Tavsif')),
                ('weekday_price', models.FloatField(verbose_name='Begim kunlaridagi narxi')),
                ('weekend_price', models.FloatField(verbose_name='Dam olish kunlari narxi')),
                ('region', models.CharField(max_length=50, verbose_name='Viloyat')),
                ('district', models.CharField(max_length=50, verbose_name='Tuman')),
                ('longtitute', models.FloatField(blank=True, null=True, verbose_name='Longtitute')),
                ('latitute', models.FloatField(blank=True, null=True, verbose_name='Latitute')),
                ('announcer', models.CharField(max_length=255, verbose_name="E'lon beruvchi")),
                ('phone', models.CharField(max_length=20, verbose_name='Telefon raqam')),
                ('is_published', models.BooleanField(default=True, verbose_name='Chop etilishi')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model, api.models.DateTimeMixin),
        ),
        migrations.CreateModel(
            name='EstateFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EstatePhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.FileField(upload_to='images/')),
                ('estate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='api.estate')),
            ],
            bases=(models.Model, api.models.DateTimeMixin),
        ),
        migrations.AddField(
            model_name='estate',
            name='facilities',
            field=models.ManyToManyField(to='api.EstateFacility'),
        ),
        migrations.AddField(
            model_name='estate',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name="E'lon beruvchi profili"),
        ),
        migrations.CreateModel(
            name='EstateTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Nomi')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='api.estate')),
            ],
            options={
                'verbose_name': 'estate Translation',
                'db_table': 'api_estate_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EstateFacilityTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('title', models.CharField(max_length=200, verbose_name='Nomi')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='api.estatefacility')),
            ],
            options={
                'verbose_name': 'estate facility Translation',
                'db_table': 'api_estatefacility_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
